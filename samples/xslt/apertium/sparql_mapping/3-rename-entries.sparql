PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX ontolex: <http://www.w3.org/ns/lemon/ontolex#>
PREFIX lime: <http://www.w3.org/ns/lemon/lime#>
PREFIX conll: <https://github.com/acoli-repo/conll-rdf/blob/master/owl/conll.ttl#>

# Find all the entries with conll:UPOS and create:
# 1. ontolex:LexicalEntry
# 2. ontolex:Form
# 3. lime:entry
INSERT {
  ?old_entry rdfs:comment "delete_me" .
  ?new_entry a ontolex:LexicalEntry ;
             owl:sameAs ?old_entry ;
             ontolex:lexicalForm ?new_form .

  ?new_form a ontolex:Form ;
              ontolex:writtenRep ?word .

  ?lexicon lime:entry ?new_entry .

}
WHERE {
  ?lexicon lime:entry ?old_entry .
  
# Lexicon and lang cannot be accessed with streamed datasets 
# because Lexicon is only available in the first segment.
# Could be made globally available by using a Splitter before updates:
# 1. Splitter: Write Lexicon into named graph.
# 2. Pipe named graph from Splitter into named graph in Updater.
# 3. Updater: adjust statement below to take this info from named graph.
#
# ?lexicon lime:language ?lang .
# 

  ?old_entry conll:UPOS ?ud_pos ;
             ontolex:lexicalForm/ontolex:writtenRep ?word .

  BIND(URI(CONCAT(CONCAT(CONCAT(STR(?lexicon), '/'),
                         CONCAT(ENCODE_FOR_URI(?word), '-'), 
                         CONCAT(ENCODE_FOR_URI(LCASE(?ud_pos)), '-'), 
						 
# Use string rebind for obtaining language instead.	
# Luckily, language is always the last two chars of the original URI.	
						 SUBSTR(STR(?old_entry), STRLEN(STR(?old_entry))-1, 2)
#                         ?lang

						 ))) as ?new_entry)

  BIND(URI(CONCAT(STR(?new_entry), '-form')) as ?new_form)
  
  FILTER(STR(?old_entry) != STR(?new_entry))
}